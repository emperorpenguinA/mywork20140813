package test.euler;

import java.util.ArrayList;
import java.util.List;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 *
 * フィボナッチ数列の新しい項は前の二つの項の合計から生成される。
 * 1と2から始めて最初の10項は：1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 400万を超えないフィボナッチ数列を考えて偶数の項の合計を答えなさい
 */
public class Question2 {

    public static void main(String[] args) {

        List<Integer> fibonacciList = new ArrayList<Integer>();

        // 初項設定
        fibonacciList.add(1);
        fibonacciList.add(2);

        int count = 0;
        int sum = 2;
        while (true) {
            int term = getFibonacciTerm(fibonacciList.get(count), fibonacciList.get(count + 1));
            if (term <= 4000000) {
                fibonacciList.add(term);
                if (term % 2 == 0) {
                    sum += term;
                }
                count++;
            } else {
                break;
            }
        }
        System.out.println(sum);
    }

    private static Integer getFibonacciTerm(final Integer term1, final Integer term2) {
        return term1 + term2;
    }
}
